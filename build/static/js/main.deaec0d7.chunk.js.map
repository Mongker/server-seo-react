{"version":3,"sources":["component/SEO/MetaSEO.jsx","WrapperConponent/WrapperRouter.jsx","WrapperConponent/WrapperSuspense.jsx","App.js","reportWebVitals.js","index.js"],"names":["MetaSEO","title","description","url","image","icon","name","Helmet","content","rel","href","property","defaultProps","WrapperRouter","children","Fragment","WrapperSuspense","fallback","Statistics","React","lazy","AppComponent","dataSEO","window","location","origin","App","listRouter","hostname","path","component","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAyCA,SAASA,EAAT,GAAkE,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACrD,OACI,eAACC,EAAA,EAAD,WACI,sBAAM,aAAW,eAAeC,QAAQ,6BACxC,gCAAQP,IACR,sBAAMK,KAAK,cAAcE,QAASN,IAClC,sBAAMO,IAAI,OAAOC,KAAML,IACvB,sBAAMC,KAAK,SAASE,QAASF,IAC7B,sBAAMA,KAAK,WAAWE,QAAS,iFAC/B,sBAAMF,KAAK,QAAQE,QAASP,IAC5B,sBAAMK,KAAK,cAAcE,QAASN,IAGlC,sBAAMI,KAAK,SAASE,QAAS,iBAG7B,sBAAMG,SAAS,iBAAiBH,QAASN,IACzC,sBAAMS,SAAS,SAASH,QAASL,IACjC,sBAAMQ,SAAS,WAAWH,QAASP,IACnC,sBAAMU,SAAS,UAAUH,QAAQ,YACjC,sBAAMG,SAAS,WAAWH,QAASJ,IACnC,sBAAMO,SAAS,iBAAiBH,QAAQ,QACxC,sBAAMG,SAAS,kBAAkBH,QAAQ,QACzC,sBAAMG,SAAS,UAAUH,QAAQ,eAnD7CR,EAAQY,aAAe,CACnBR,MAAO,2CACPH,MAAO,8DACPK,KAAM,UACNJ,YAAa,0PACbG,KAAM,wCACNF,IAAK,4CAkDMH,Q,QCzDf,SAASa,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SACrB,OAAO,cAAC,IAAD,UAAgBA,IAO3BD,EAAcD,aAAe,CACzBE,SAAU,kBAAM,cAAC,IAAMC,SAAP,MAGLF,QCXf,SAASG,EAAT,GAAwC,IAAbF,EAAY,EAAZA,SACvB,OAAO,cAAC,WAAD,CAAUG,SAAU,oDAApB,SAAkDH,IAO7DE,EAAgBJ,aAAe,CAC3BE,SAAU,kBAAM,cAAC,IAAMC,SAAP,MAGLC,QCTTE,G,wBAAaC,IAAMC,MAAK,kBAAM,wDAC9BC,EAAeF,IAAMC,MAAK,kBAAM,iCAEhCE,EAAU,CACZlB,MAAO,wCACPH,MAAO,kDACPK,KAAM,gBACNJ,YAAa,sOACbG,KAAM,wCACNF,IAAKoB,OAAOC,SAASC,QAkCVC,MA/Bf,WACI,IAAIC,EACJ,GACS,4BADDJ,OAAOC,SAASI,SAEhBD,EAAa,CACT,CAACE,KAAM,IAAKC,UAAWZ,SAK3BS,EAAa,CACT,CAACE,KAAM,IAAKC,UAAWT,IAInC,OACI,eAAC,EAAD,WACI,cAAC,EAAD,eAAaC,IACb,cAAC,EAAD,UACI,cAAC,IAAD,UAEQK,EAAWI,KAAI,SAAAC,GAAI,OACf,cAAC,IAAD,eAAWA,eCtCxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.deaec0d7.chunk.js","sourcesContent":["/**\r\n * Copyright 2020 present, Lê Văn Mong.\r\n * All rights reserved.\r\n * @author Mongker on 24/11/2020\r\n * @email: levanmong.dola.99@gmail.com\r\n * @student-code: 68DCHT20091\r\n * @university: UTT (Đại học Công Nghệ Giao Thông Vận Tải)\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nMetaSEO.defaultProps = {\r\n    image: 'https://i.im.ge/2021/10/16/oFBfCP.md.jpg',\r\n    title: 'Lê Văn Mong | Blogger MONGKER | Front-End Developer',\r\n    name: 'Mongker',\r\n    description: 'Website này là nơi chia sẽ kiến thức mình đã học được trong quá trình học lập trình. Mong rằng kiến thức này giúp được các bạn!',\r\n    icon: 'https://i.im.ge/2021/10/16/oFGSMF.png',\r\n    url: 'https://i.im.ge/2021/10/16/oFBfCP.md.jpg',\r\n};\r\n\r\nMetaSEO.propTypes = {\r\n    description: PropTypes.string,\r\n    title: PropTypes.string,\r\n    url: PropTypes.string,\r\n    image: PropTypes.string,\r\n    name: PropTypes.string,\r\n};\r\n\r\n/**\r\n * Hiển thị quản cáo meta cho nghiệp vụ SEO website\r\n * @param title\r\n * @param description\r\n * @param url\r\n * @param image\r\n * @param icon\r\n * @param name\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction MetaSEO({ title, description, url, image, icon, name }) {\r\n    return (\r\n        <Helmet>\r\n            <meta http-equiv='Content-Type' content='text/html; charset=utf-8' />\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <link rel='icon' href={icon} />\r\n            <meta name='author' content={name} />\r\n            <meta name='keywords' content={'react, kiến thức lập trình, người viết code'} />\r\n            <meta name=\"title\" content={title} />\r\n            <meta name=\"description\" content={description}></meta>\r\n\r\n            {/* ROBOTS */}\r\n            <meta name='robots' content={'index,follow'} />\r\n\r\n            {/* SEO google, facebook */}\r\n            <meta property='og:description' content={description} />\r\n            <meta property='og:url' content={url} />\r\n            <meta property='og:title' content={title} />\r\n            <meta property='og:type' content='article' />\r\n            <meta property='og:image' content={image} />\r\n            <meta property='og:image:width' content='720' />\r\n            <meta property='og:image:height' content='480' />\r\n            <meta property=\"og:type\" content=\"website\" />\r\n        </Helmet>\r\n    );\r\n}\r\n\r\nexport default MetaSEO;\r\n","/**\n * Copyright 2020 present, Đào Thị Thanh Mai.\n * All rights reserved.\n * @author Mongker on 17/10/2021\n * @email: monglv36@gmail.com\n * @student_code: 68DCHT20091\n * @university: UTT (Đại học Công Nghệ Giao Thông Vận Tải)\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter } from 'react-router-dom';\nfunction WrapperRouter({ children }) {\n    return <BrowserRouter>{children}</BrowserRouter>;\n}\n\nWrapperRouter.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n};\n\nWrapperRouter.defaultProps = {\n    children: () => <React.Fragment />,\n};\n\nexport default WrapperRouter;\n","/**\n * Copyright 2020 present, Đào Thị Thanh Mai.\n * All rights reserved.\n * @author Mongker on 17/10/2021\n * @email: monglv36@gmail.com\n * @student_code: 68DCHT20091\n * @university: UTT (Đại học Công Nghệ Giao Thông Vận Tải)\n */\n\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\n// import PropTypes from 'prop-types';\n\nfunction WrapperSuspense({ children }) {\n    return <Suspense fallback={<h1>Loading profile...</h1>}>{children}</Suspense>;\n}\n\nWrapperSuspense.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n};\n\nWrapperSuspense.defaultProps = {\n    children: () => <React.Fragment />,\n};\n\nexport default WrapperSuspense;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// component\nimport MetaSEO from './component/SEO/MetaSEO';\nimport WrapperRouter from './WrapperConponent/WrapperRouter';\nimport WrapperSuspense from './WrapperConponent/WrapperSuspense';\n\n// style\nimport './App.css';\n// import './styles/antd.css';\nimport 'antd/dist/antd.css';\nimport './styles/grid.scss';\nimport * as path from \"path\";\n\n// const component\nconst Statistics = React.lazy(() => import('./component/admin/hoanggiastart.vn/Statistics'));\nconst AppComponent = React.lazy(() => import('./component'));\n\nconst dataSEO = {\n    image: 'https://i.im.ge/2021/10/19/o2iC6L.jpg',\n    title: 'Tổng kho ván gỗ Hoàng Gia Start',\n    name: 'hoanggiastrat',\n    description: 'Chuyên buôn bán các loại ván gỗ, là nhà phân phối khắp ván gỗ lớn nhất Việt Nam và được nhiều khách hàng đang tiên dùng ',\n    icon: 'https://i.im.ge/2021/10/16/oFGSMF.png',\n    url: window.location.origin,\n}\n\nfunction App() {\n    let listRouter;\n    switch (window.location.hostname) {\n        case 'admin.hoanggiastart.com':\n            listRouter = [\n                {path: '/', component: Statistics}\n            ]\n            break;\n        default:\n            // exact\n            listRouter = [\n                {path: '/', component: AppComponent}\n            ]\n            break;\n    }\n    return (\n        <WrapperRouter>\n            <MetaSEO {...dataSEO} />\n            <WrapperSuspense>\n                <Switch>\n                    {\n                        listRouter.map(item => (\n                            <Route {...item} />\n                        ))\n                    }\n                </Switch>\n            </WrapperSuspense>\n        </WrapperRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}